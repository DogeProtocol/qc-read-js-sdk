/**
 * Accounts Read API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AccountPendingTransactionSummaryResponse from '../model/AccountPendingTransactionSummaryResponse';
import AccountTransactionSummaryResponse from '../model/AccountTransactionSummaryResponse';
import BalanceResponse from '../model/BalanceResponse';
import ErrorResponseModel from '../model/ErrorResponseModel';

/**
* Accounts service.
* @module api/AccountsApi
* @version v1
*/
export default class AccountsApi {

    /**
    * Constructs a new AccountsApi. 
    * @alias module:api/AccountsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getAccountBalance operation.
     * @callback module:api/AccountsApi~getAccountBalanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BalanceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get account balance
     * @param {String} address the string representing the address
     * @param {module:api/AccountsApi~getAccountBalanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BalanceResponse}
     */
    getAccountBalance(address, callback) {
      let postBody = null;
      // verify the required parameter 'address' is set
      if (address === undefined || address === null) {
        throw new Error("Missing the required parameter 'address' when calling getAccountBalance");
      }

      let pathParams = {
        'address': address
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BalanceResponse;
      return this.apiClient.callApi(
        '/api/accounts/{address}/balance', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listAccountPendingTransactions operation.
     * @callback module:api/AccountsApi~listAccountPendingTransactionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AccountPendingTransactionSummaryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List account pending transactions info by page
     * @param {String} address the string representing the address
     * @param {Number} pageIndex the interger representing page number
     * @param {module:api/AccountsApi~listAccountPendingTransactionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AccountPendingTransactionSummaryResponse}
     */
    listAccountPendingTransactions(address, pageIndex, callback) {
      let postBody = null;
      // verify the required parameter 'address' is set
      if (address === undefined || address === null) {
        throw new Error("Missing the required parameter 'address' when calling listAccountPendingTransactions");
      }
      // verify the required parameter 'pageIndex' is set
      if (pageIndex === undefined || pageIndex === null) {
        throw new Error("Missing the required parameter 'pageIndex' when calling listAccountPendingTransactions");
      }

      let pathParams = {
        'address': address,
        'pageIndex': pageIndex
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AccountPendingTransactionSummaryResponse;
      return this.apiClient.callApi(
        '/api/accounts/{address}/pending/txn/page/{pageIndex}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listAccountTransactions operation.
     * @callback module:api/AccountsApi~listAccountTransactionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AccountTransactionSummaryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List account transactions info by page
     * @param {String} address the string representing the address
     * @param {Number} pageIndex the interger representing page number
     * @param {module:api/AccountsApi~listAccountTransactionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AccountTransactionSummaryResponse}
     */
    listAccountTransactions(address, pageIndex, callback) {
      let postBody = null;
      // verify the required parameter 'address' is set
      if (address === undefined || address === null) {
        throw new Error("Missing the required parameter 'address' when calling listAccountTransactions");
      }
      // verify the required parameter 'pageIndex' is set
      if (pageIndex === undefined || pageIndex === null) {
        throw new Error("Missing the required parameter 'pageIndex' when calling listAccountTransactions");
      }

      let pathParams = {
        'address': address,
        'pageIndex': pageIndex
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AccountTransactionSummaryResponse;
      return this.apiClient.callApi(
        '/api/accounts/{address}/txn/page/{pageIndex}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
